#!/bin/bash
#
# Copyright (C) 2013 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
# Copyright (C) 2012 Colin Walters <walters@verbum.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

set -e
set -x

srcrepo=$1
shift
osname=$1
shift
target=$1
shift

test -n "$target" || (echo 1>&2 "usage: $0: SRCREPO OSNAME TARGET"; exit 1)
    
qemu_path=ostree-qemu.img
mountpoint=ostree-qemu-mnt
imgsize=2G

function run_guestfish() {
    guestfish -a ${qemu_path} --rw $*
}

function abort() {
    umount ${mountpoint} 2>/dev/null
    exit 1
}

mkdir -p ${mountpoint}

if ! test -f ${qemu_path}; then
    tmppath=${qemu_path}.tmp
    rm -f ${tmppath}
    qemu-img create ${tmppath} ${imgsize}
    mkfs.ext4 -q -F ${tmppath}

    umount ${mountpoint} 2>/dev/null || true
    mount -o loop ${tmppath} ${mountpoint}
    ostree admin init-fs ${mountpoint} || abort
    umount ${mountpoint}
    mv ${tmppath} ${qemu_path}
fi

ostreedir=${mountpoint}/ostree
repopath=${ostreedir}/repo
bootdir=${mountpoint}/boot

mount -o loop ${qemu_path} ${mountpoint}

ostree admin --ostree-dir=${ostreedir} os-init ${osname} || abort
ostree --repo=${repopath} pull-local ${srcrepo} ${target} || abort
ostree admin --ostree-dir=${ostreedir} deploy --no-kernel ${osname} ${target} || abort
ostree admin --ostree-dir=${ostreedir} --boot-dir=${bootdir} update-kernel --no-bootloader ${osname} || abort
ostree admin --ostree-dir=${ostreedir} prune ${osname} ${target} || abort

cat >${ostreedir}/deploy/${osname}/current-etc/fstab <<EOF
/dev/sda / ext4 defautls 1 1
EOF

kernel=$(find ${bootdir} -type f -name "vmlinuz-*" -print -quit | sed -e "s,${mountpoint},,g")
initramfs=$(find ${bootdir} -type f -name "initramfs-*.img" -print -quit | sed -e "s,${mountpoint},,g")

if [ ! -f ${mountpoint}${kernel} ]; then
    echo "No kernel found, aborting..."
    abort
fi

if [ ! -f ${mountpoint}${initramfs} ]; then
    echo "No initramfs found, aborting..."
    abort
fi

mkdir -p ${bootdir}/grub
cat >${bootdir}/grub/menu.lst <<EOF
default=0
timeout=5
title ${osname}
root (hd0)
kernel ${kernel} root=/dev/sda ostree=${osname}/current quiet
initrd ${initramfs}
EOF
grub-menulst2cfg ${bootdir}/grub/menu.lst ${bootdir}/grub/grub.cfg
rm -f ${bootdir}/grub/menu.lst

cat >${bootdir}/grub/device.map <<EOF
(hd0) /dev/loop0
EOF

grub-install -f --boot-directory=${bootdir} '(hd0)' || abort

umount ${mountpoint}
