From 6b1c7810953aa19a7ac6c9955398442c548abe85 Mon Sep 17 00:00:00 2001
From: Colin Walters <walters@verbum.org>
Date: Fri, 20 Jan 2012 14:46:14 -0500
Subject: [PATCH] Build with vala 0.15

---
 backends/key-file/kf-persona-store.vala |    6 +++---
 folks/backend-store.vala                |   16 ++++++++--------
 folks/object-cache.vala                 |    6 +++---
 tests/folks/backend-loading.vala        |    6 +++---
 tests/lib/eds/backend.vala              |    2 +-
 tools/inspect/inspect.vala              |    2 +-
 6 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/backends/key-file/kf-persona-store.vala b/backends/key-file/kf-persona-store.vala
index 0d2bb53..5f75d56 100644
--- a/backends/key-file/kf-persona-store.vala
+++ b/backends/key-file/kf-persona-store.vala
@@ -450,9 +450,9 @@ public class Folks.Backends.Kf.PersonaStore : Folks.PersonaStore
            * Vala <= 0.10, it returned the character length). FIXME: We need to
            * take this into account until we depend explicitly on
            * Vala >= 0.11. */
-          yield this.file.replace_contents_async (key_file_data,
-              key_file_data.length, null, false, FileCreateFlags.PRIVATE,
-              cancellable);
+          yield this.file.replace_contents_async (key_file_data.data,
+              null, false, FileCreateFlags.PRIVATE,
+              cancellable, null);
         }
       catch (Error e)
         {
diff --git a/folks/backend-store.vala b/folks/backend-store.vala
index a00bf19..9d28f9b 100644
--- a/folks/backend-store.vala
+++ b/folks/backend-store.vala
@@ -537,10 +537,10 @@ public class Folks.BackendStore : Object {
       debug ("Searching for modules in folder '%s' ..", dir.get_path ());
 
       var attributes =
-          FILE_ATTRIBUTE_STANDARD_NAME + "," +
-          FILE_ATTRIBUTE_STANDARD_TYPE + "," +
-          FILE_ATTRIBUTE_STANDARD_IS_SYMLINK + "," +
-          FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE;
+          FileAttribute.STANDARD_NAME + "," +
+          FileAttribute.STANDARD_TYPE + "," +
+          FileAttribute.STANDARD_IS_SYMLINK + "," +
+          FileAttribute.STANDARD_CONTENT_TYPE;
 
       GLib.List<FileInfo> infos;
       try
@@ -675,7 +675,7 @@ public class Folks.BackendStore : Object {
         {
           /* Query for the MIME type; if the file doesn't exist, we'll get an
            * appropriate error back, so this also checks for existence. */
-          file_info = yield file.query_info_async (FILE_ATTRIBUTE_STANDARD_TYPE,
+          file_info = yield file.query_info_async (FileAttribute.STANDARD_TYPE,
               FileQueryInfoFlags.NONE, Priority.DEFAULT, null);
         }
       catch (Error error)
@@ -766,9 +766,9 @@ public class Folks.BackendStore : Object {
            * Vala <= 0.10, it returned the character length). FIXME: We need to
            * take this into account until we depend explicitly on
            * Vala >= 0.11. */
-          yield this._config_file.replace_contents_async (key_file_data,
-              key_file_data.length, null, false, FileCreateFlags.PRIVATE,
-              null);
+          yield this._config_file.replace_contents_async (key_file_data.data,
+              null, false, FileCreateFlags.PRIVATE,
+              null, null);
         }
       catch (Error e)
         {
diff --git a/folks/object-cache.vala b/folks/object-cache.vala
index c9adb85..52f518f 100644
--- a/folks/object-cache.vala
+++ b/folks/object-cache.vala
@@ -194,7 +194,7 @@ public abstract class Folks.ObjectCache<T> : Object
 
       try
         {
-          yield this._cache_file.load_contents_async (cancellable, out data);
+          yield this._cache_file.load_contents_async (cancellable, out data, null);
         }
       catch (Error e)
         {
@@ -372,8 +372,8 @@ public abstract class Folks.ObjectCache<T> : Object
           try
             {
               yield this._cache_file.replace_contents_async (
-                  (string) data, data.length, null, false,
-                  FileCreateFlags.PRIVATE, cancellable);
+                  data, null, false,
+                  FileCreateFlags.PRIVATE, cancellable, null);
               break;
             }
           catch (Error e)
diff --git a/tests/folks/backend-loading.vala b/tests/folks/backend-loading.vala
index 1dbcddb..d8f02f8 100644
--- a/tests/folks/backend-loading.vala
+++ b/tests/folks/backend-loading.vala
@@ -59,9 +59,9 @@ public class BackendLoadingTests : Folks.TestCase
         {
           File backend_f = File.new_for_path (kf_path);
           string data = kf.to_data ();
-          backend_f.replace_contents (data,
-              data.length, null, false, FileCreateFlags.PRIVATE,
-              null);
+          backend_f.replace_contents (data.data,
+              null, false, FileCreateFlags.PRIVATE,
+              null, null);
         }
       catch (Error e)
         {
diff --git a/tests/lib/eds/backend.vala b/tests/lib/eds/backend.vala
index 7bc0ea4..b004973 100644
--- a/tests/lib/eds/backend.vala
+++ b/tests/lib/eds/backend.vala
@@ -225,7 +225,7 @@ public class EdsTest.Backend
 
               try
                 {
-                  file.load_contents (null, out photo_content);
+                  file.load_contents (null, out photo_content, null);
 
                   var cp = new ContactPhoto ();
                   cp.type = ContactPhotoType.INLINED;
diff --git a/tools/inspect/inspect.vala b/tools/inspect/inspect.vala
index c69356b..1e3eaed 100644
--- a/tools/inspect/inspect.vala
+++ b/tools/inspect/inspect.vala
@@ -299,7 +299,7 @@ public class Folks.Inspect.Client : Object
     }
 }
 
-private abstract class Folks.Inspect.Command
+public abstract class Folks.Inspect.Command
 {
   protected Client client;
 
-- 
1.7.6.5

